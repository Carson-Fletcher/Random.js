/* random.js version 1.2 https://github.com/Carson-Fletcher/Random.js/README */ const random={randInt(e,r){if(1==arguments.length&&(r=e,e=0),0==arguments.length&&(r=1,e=0),!Number.isInteger(e))throw TypeError(`Expected integer. Received ${typeof e}: ${e}`);if(!Number.isInteger(r))throw TypeError(`Expected integer. Received ${typeof r}: ${r}`);return r<e&&([r,e]=[e,r]),Math.floor(Math.random()*(r-e+1))+e},randFloat(e,r,t){if(2==arguments.length&&(t=2),1==arguments.length&&(r=e,e=0,t=2),0==arguments.length&&(r=1,e=0,t=2),isNaN(e))throw TypeError(`Expected integer or float. Received ${typeof e}: ${e}`);if(isNaN(r))throw TypeError(`Expected integer or float. Received ${typeof r}: ${r}`);if(!Number.isInteger(t)||t<0)throw TypeError(`Expected positive integer. Received ${typeof t}: ${t}`);return r<e&&([r,e]=[e,r]),parseFloat((Math.random()*(r-e)+e).toFixed(t))},randBool:()=>Math.random()+.5>>0==1,randLet(){const e="abcdefghijklmnopqrstuvwxyz";return e[Math.floor(Math.random()*(e.length-1+1))]},randChoice(e){if(!arguments.length&&void 0===e||!Array.isArray(e)&&"string"!=typeof e)throw new TypeError(`Expected array or string. Received ${typeof e}: ${e}`);return e[Math.floor(Math.random()*(e.length-1+1))]},shuffleArr(e){if(!arguments.length&&!e.length||!Array.isArray(e))throw new TypeError(`Expected array. Received ${typeof e}: ${e}`);for(let r=e.length-1;r>0;r--){const t=Math.floor(Math.random()*(r+1));[e[r],e[t]]=[e[t],e[r]]}return e},shuffleStr(e){if(!arguments.length&&!arr.length||"string"!=typeof e)throw new TypeError(`Expected string. Received ${typeof e}: ${e}`);for(let r=(e=e.split("")).length-1;r>0;r--){let t=Math.floor(Math.random()*(r+1));[e[r],e[t]]=[e[t],e[r]]}return e.join("")}};
